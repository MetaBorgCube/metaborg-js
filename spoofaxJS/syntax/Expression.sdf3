module Expression

imports

  Common
  Parameter
  Statement
  
context-free syntax
  Expression = < ( <Expression> ) > {bracket}
  Expression.Property = <<Expression>.<ID>> {left}
  Expression.Call = <<Expression>(<{Expression ","}*>)> {left}
  Expression.IntegerLiteral = <<INT>> {non-assoc}
  Expression.True = <true> {non-assoc}
  Expression.False = <false> {non-assoc}
  Expression.Null = <null> {non-assoc}
  Expression.Identifier = <<ID>> {non-assoc}
  Expression.String = <<STRING>> {non-assoc}
  Expression.Addition = <<Expression> + <Expression>> {left}
  Expression.Substraction = <<Expression> - <Expression>> {left}
  Expression.Multiplication = <<Expression> * <Expression>> {left}
  Expression.AnonFunction= <function(<{Parameter ","}*>) {
  		<{Statement "\n"}*>
	}>
  
context-free priorities
{ left:
	Expression.Call
} > 
{ left:
	Expression.Multiplication
} >
{ left:
	Expression.Addition
	Expression.Substraction	
}